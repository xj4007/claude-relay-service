  #####################################################################
 npm run install:web   # 安装前端依赖
  npm run build:web     # 构建前端文件

  为什么需要两个命令？

  1. npm run install:web - 这只是安装依赖包，相当于在 web/admin-spa 目录下运行 npm install
  2. npm run build:web - 这才是真正构建前端代码，把 Vue.js 源码编译成浏览器可以直接使用的静态文件

  类比理解

  就像你写了一个 TypeScript 文件：
  - 安装依赖 ≈ 下载 TypeScript 编译器
  - 构建 ≈ 把 TypeScript 编译成 JavaScript

  如果你只执行 npm run install:web，访问新版界面时会看到 404 错误，因为没有构建出来的静态文件。

  所以正确流程：

  # 安装项目依赖
  npm install

  # 安装前端依赖
  npm run install:web

  # 构建前端（生成可访问的文件）
  npm run build:web

  # 启动开发服务
  npm run dev



######################################################################
1. 关于 npm run setup 生成的配置

  npm run setup 会生成：
  - data/init.json - 管理员账户信息（用户名/密码）
  - 如果 .env 文件中没有密钥，会自动生成 JWT_SECRET 和 ENCRYPTION_KEY

  部署时的处理方式：

  方案A：保留配置文件（推荐）
  # 本地开发完成后，直接部署整个项目
  # data/init.json 和 .env 文件保留
  # 这样管理员账户和密钥都是一致的

  方案B：重新生成配置
  # 删除本地配置
  rm data/init.json
  rm .env

  # 在生产环境重新生成
  cp .env.example .env
  # 编辑 .env 设置生产环境的配置
  npm run setup  # 重新生成管理员账户

  2. 关于打包部署

  Docker 方式（推荐）

  # 使用项目自带的 Dockerfile
  docker build -t claude-relay-service .

  # 或者直接用官方镜像
  docker pull weishaw/claude-relay-service:latest

  传统部署方式

  # 构建完整项目
  npm run install:web
  npm run build:web

  # 打包整个项目目录上传到服务器
  # 包含 node_modules, data/, logs/ 等

  3. 关于 Redis 数据

  Redis 数据不会自动保存！ 你需要考虑：

  本地开发数据

  # 本地测试的数据（API Keys、账户配置等）存储在 Redis 中
  # 默认情况下，Redis 重启后数据会丢失

  生产环境建议

  # 1. 配置 Redis 持久化
  # 在 redis.conf 中启用 RDB 或 AOF

  # 2. 或者使用数据导出功能
  npm run data:export           # 导出所有配置和数据
  npm run data:import           # 在新环境导入数据

  推荐的部署流程

  开发完成后：

  # 1. 导出重要数据
  npm run data:export

  # 2. 提交代码（包含配置文件）
  git add data/init.json .env
  git commit -m "Add production config"

  生产部署：

  # 方案1: Docker（推荐）
  docker-compose up -d

  # 方案2: 传统部署
  git pull
  npm install
  npm run install:web
  npm run build:web
  npm run data:import  # 如果需要导入之前的数据
  npm run service:start:daemon

  总结

  - 配置文件建议保留，这样部署后管理员账户是一致的
  - Redis 数据需要手动备份，用项目提供的导出/导入功能
  - 推荐 Docker 部署，更简单可靠

###################################################################
E:\cpde_new\sanyun\claude-relay-service>npm run setup

> claude-relay-service@1.0.0 setup
> node scripts/setup.js


🚀 Claude Relay Service 初始化设置

√ 初始化设置完成

✅ 设置完成！

📋 重要信息：

   管理员用户名: cr_admin_e37b2276
   管理员密码:   5iYeAtttEgiI2MIn

⚠️  请立即保存这些凭据！首次登录后建议修改密码。

💡 提示: 也可以通过环境变量 ADMIN_USERNAME 和 ADMIN_PASSWORD 预设管理员凭据。

🚀 启动服务：

   npm start              - 启动生产服务
   npm run dev            - 启动开发服务
   npm run cli admin      - 管理员CLI工具

🌐 访问地址：

   Web管理界面: http://localhost:3000/web
   API端点:     http://localhost:3000/api/v1/messages
   健康检查:    http://localhost:3000/health

我本地设置的：cr_f1699a9ab27739777072770efc08b821422e43eb7029d42fbec4e0a0373c85e7
